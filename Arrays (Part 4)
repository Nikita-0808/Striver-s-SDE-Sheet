# Question 1. Two Sum Problem
Leetcode Question no. 1 - Two Sum
https://leetcode.com/problems/two-sum/

// brute force approach

class Solution {
    public int[] twoSum(int[] nums, int target) {
        int arr[]=new int[2];
        for(int i=0;i<nums.length-1;i++){
            for(int j=i+1;j<nums.length;j++){
                if(nums[i]+nums[j]==target){
                     arr[0]= i;
                     arr[1]=j;
                }
            }
        }
        return arr;
    }
}

Note :- Time Complexity = O(n^2) and Space Complexity = O(1)

// optimal Approach

class Solution {
    public int[] twoSum(int[] nums, int target) {
        int ans[] = new int[2];
        HashMap<Integer,Integer> hm = new HashMap<>();
        for(int i=0; i<nums.length; i++){
            int diff = target - nums[i];
            if(hm.containsKey(diff)){
                ans[0] = hm.get(diff);
                ans[1] = i;
                break;
            }
            else{
                hm.put(nums[i], i);
            }
        }
        return ans;
    }
}

Note :- Time Complexity = O(n) and Space Complexity = O(n)


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# Question 2. 4-Sum Problem
Leetcode Question no. 18 - 4Sum
https://leetcode.com/problems/4sum/

